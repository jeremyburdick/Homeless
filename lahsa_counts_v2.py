import requests as req
import json
import gzip

## all stored queries have embedded community = Venice and year = 2018

## queries by community name

dropqryfile = [
    'examples/qry_dropdown_1.json', # get list of sheltered/unsheltered statistics by year (job1 results)
    'examples/qry_dropdown_2.json', # get list of available statistic years (job1 results)
    'examples/qry_dropdown_3.json', # get homeless breakdown by job0 sheltered (safe, transitional, emergency) & job1 unsheltered (cars, vans, rvs/campers, makeshift, tents, street)
    'examples/qry_dropdown_4.json'  # get list of census tracts & sheltered/unsheltered homeless counts for a given community/year
]

## queries by census tract

censusqryfile = [
    'examples/qry_census_1.json', # get total homeless count
    'examples/qry_census_2.json', # get unsheltered breakdown (cars, vans, rvs/campers, makeshift, tents, street) for census tract (H0-5) & enclosing community (M0-5)
    'examples/qry_census_3.json', # get sheltered breakdown (safe, transitional, emergency) for census tract (H0-2) & enclosing community (M0-2)
    'examples/qry_census_4.json', # get ???
]

def readfile(x):
    f = open(x)
    s = f.read()
    f.close()
    return s


# community_qryfile_brk          = dropqryfile[2]
# community_qryfile_census_lst   = dropqryfile[3]
# census_qryfile_total           = censusqryfile[0]
# census_qryfile_unsheltered_brk = censusqryfile[1]
# census_qryfile_sheltered_brk   = censusqryfile[2]

community_qry_brk          = readfile(dropqryfile[2])
community_qry_census_lst   = readfile(dropqryfile[3])

census_qry_total           = readfile(censusqryfile[0])
census_qry_unsheltered_brk = readfile(censusqryfile[1])
census_qry_sheltered_brk   = readfile(censusqryfile[2])

# n = ['Brentwood','Palisades','West Los Angeles','Venice','Westchester','Del Rey','Mar Vista','Playa Vista']

#LA COC = LA community of care (excludes pasadena, glendale, long beach)
# this list generated by lahsa_get_communities.py

lacoc = readfile("lahsa_community_list.txt").split('\n')

# lacoc = ["CoC"]

# n = ['Los Angeles']
y = ['2016','2017','2018','2019']


#exit()



#exit()

#POST /public/reports/querydata?synchronous=true HTTP/1.1
#Host: wabi-west-us-api.analysis.windows.net
#Connection: keep-alive
#Content-Length: 905
#Accept: application/json, text/plain, */*
#RequestId: 5b1ef2bf-ad11-fe16-5cb2-0b69d6ae467d
#DNT: 1
#X-PowerBI-ResourceKey: 268bdff9-d2cc-4845-a765-9f17c9f52dad
#Content-Type: application/json;charset=UTF-8
#User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36
#ActivityId: 55748665-d0d1-4b5c-b224-5b7eedb0ecd0
#Origin: https://app.powerbi.com
#Sec-Fetch-Site: cross-site
#Sec-Fetch-Mode: cors
#Sec-Fetch-Dest: empty
#Referer: https://app.powerbi.com/view?r=eyJrIjoiMjY4YmRmZjktZDJjYy00ODQ1LWE3NjUtOWYxN2M5ZjUyZGFkIiwidCI6IjBiYWU1NDliLTUyZDgtNGEzYi1hYTE5LWQ1MDY2MmIzMDg5NyIsImMiOjZ9
#Accept-Encoding: gzip, deflate, br
#Accept-Language: en-US,en;q=0.9

h = {'Accept': 'application/json, text/plain, */*',
     'ActivityId': '55748665-d0d1-4b5c-b224-5b7eedb0ecd0',
     'Content-Type': 'application/json;charset=UTF-8',
     'DNT': '1',
     'Origin': 'https://app.powerbi.com',
     'Referer': 'https://app.powerbi.com/view?r=eyJrIjoiZTkyNDg3ZTMtNmYxMi00MWZkLTgyMjctM2Q1M2I2ZTgzM2UwIiwidCI6IjBiYWU1NDliLTUyZDgtNGEzYi1hYTE5LWQ1MDY2MmIzMDg5NyIsImMiOjZ9',
     'RequestId': '5b1ef2bf-ad11-fe16-5cb2-0b69d6ae467d',
     'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36',
     'X-PowerBI-ResourceKey': '268bdff9-d2cc-4845-a765-9f17c9f52dad',
     'X-PowerBI-User-GroupId': ''
     }

#h = {'Accept': 'application/json, text/plain, */*',
#     'ActivityId': '14b7e49a-a5a3-45e8-8d39-e25721da7c0a',
#     'Content-Type': 'application/json;charset=UTF-8',
#     'DNT': '1',
#     'Origin': 'https://app.powerbi.com',
#     'Referer': 'https://app.powerbi.com/view?r=eyJrIjoiZTkyNDg3ZTMtNmYxMi00MWZkLTgyMjctM2Q1M2I2ZTgzM2UwIiwidCI6IjBiYWU1NDliLTUyZDgtNGEzYi1hYTE5LWQ1MDY2MmIzMDg5NyIsImMiOjZ9',
#     'RequestId': '06a49592-366e-4d4e-4493-97c429931ab5',
#     'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36',
#     'X-PowerBI-ResourceKey': 'e92487e3-6f12-41fd-8227-3d53b6e833e0',
#     'X-PowerBI-User-GroupId': ''
#     }

def getpost(qry, textout):
    r = req.post('https://wabi-west-us-api.analysis.windows.net/public/reports/querydata?synchronous=true', data=qry, headers=h, stream=True)

    raw = r.raw.read(100000)

    f = open(textout + ".gz", 'wb')
    f.write(raw)
    f.close()

    ret = gzip.decompress(raw).decode('utf-8')

    f = open(textout, 'w')
    f.write(ret)
    f.close()

    return ret

def censuslst(jsondata):

    j = json.loads(jsondata)

    print(j)

    lst = j["results"][1]["result"]["data"]["dsr"]["DS"][0]["PH"][0]["DM0"]

    for ac in lst:
        if "C" in ac:
            c = ac["C"]

            print(c)





yi = '2018'

def getcensuslst(n):

    print(n)

    for ni in n:

        community_no_space = ni.replace(' ', '_').replace('/', '_')

        nlst = "v2_lahsa_result_census_lst_" + community_no_space + ".json"

        print(nlst)

        qlst = community_qry_census_lst.replace('Venice', ni).replace('2018', yi)
        print(qlst)

        rlst = getpost(qlst, nlst)

        censuslst(rlst)


getcensuslst(lacoc)


#    for yi in y:
#        print()

        # nbrk = "v2_lahsa_result_community_brk" + yi + "_" + community_no_space + ".json"

        # qbrk = community_qry_brk.replace('Venice', ni).replace('2018', yi)

        # print("%s %s" % (ni, yi))

        # getpost(qbrk, nbrk)




exit()









#print(r.headers)

